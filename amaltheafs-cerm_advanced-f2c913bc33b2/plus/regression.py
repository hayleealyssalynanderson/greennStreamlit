import numpy as np

from sklearn.linear_model import Lasso
from sklearn.neural_network import MLPRegressor
from sklearn.model_selection import train_test_split
from sklearn.datasets import load_digits, make_regression
from sklearn.preprocessing import PolynomialFeatures
from sklearn.feature_selection import f_regression

"""This script presents several regression frameworks to assess the influence of climate coefficients unto losses"""

#logging of column names

keylist = ["alpha", "beta", "gamma", "H", "theta", "expected_loss", "unexpected_loss1", "unexpected_loss2"]

#opening of database generated by make_db

with open("Work/data.csv") as file_name:
    next(file_name)
    array = np.loadtxt(file_name, delimiter=",")

#delete first column of indices

array = np.delete(array, 0, 1)

#definition of X and y

X = array[:,:5]
y = array[:,5:]

#Lasso regression

reg_lasso = Lasso()
reg_lasso.fit(X,y)
print(reg_lasso.score(X, y))
for i in range(3):
    print("f-test "+str(i), f_regression(X,y[:,i]))

lasso_prediction = reg_lasso.predict(X)

    ##Comparison of regression if only 2 input parameters

X_new = X[:,[1,3]]
reg_new_lasso = Lasso()
reg_new_lasso.fit(X_new,y)
print(reg_new_lasso.score(X_new,y))

#Polynomial Regression

poly = PolynomialFeatures(degree=2)
X_poly = poly.fit_transform(X)
reg_poly = Lasso()
reg_poly.fit(X_poly,y)
print(reg_poly.score(X_poly,y))

poly_prediction = reg_poly.predict(X_poly)

X_new_poly = poly.fit_transform(X_new)
reg_new_poly = Lasso()
reg_new_poly.fit(X_new_poly,y)
print(reg_new_poly.score(X_new_poly,y))

precision = reg_new_poly.score(X_new_poly,y).copy()